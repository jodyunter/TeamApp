@page "/summary"

@using TeamApp.Services
@using TeamApp.ViewModels.Views
@using TeamApp.ViewModels.Views.Competition
@inject IGameDataService GameDataService
@inject ICompetitionService CompetitionService
@inject IStandingsService StandingsService

<h1>Daily View</h1>
<b>Current Year </b>@summary.CurrentYear
<br />
<b>Current Day</b>@summary.CurrentDay
<br />

@if (standings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowSorting="true" Data="@standings.Teams" TItem="StandingsTeamViewModel" ColumnWidth="100%">
        <Columns>
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Division" Title="Div" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Rank" Title="R" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="TeamName" Title="Name" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Wins" Title="W" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Loses" Title="L" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Ties" Title="T" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="Points" Title="Pts" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="GamesPlayed" Title="GP" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="GoalsFor" Title="GF" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="GoalsAgainst" Title="GA" />
            <RadzenGridColumn TItem="StandingsTeamViewModel" Property="GoalDifference" Title="GD" />

        </Columns>
    </RadzenGrid>
}

@code {
    GameSummary summary;
    CompetitionSimpleViewModel[] comps;

    protected override async Task OnInitializedAsync()
    {
        summary = await GameDataService.GetGameSummary();
        comps = await CompetitionService.GetCompetitionsByYear(2);
        standings = await StandingsService.GetStandings(comps[0].Id);

    }

    StandingsViewModel standings;

    


}
