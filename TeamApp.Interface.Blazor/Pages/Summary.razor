@page "/summary"

@using TeamApp.Interface.Blazor.Pages.Standings
@using TeamApp.Interface.Blazor.Pages.Games
@using TeamApp.Services
@using TeamApp.ViewModels.Views
@using TeamApp.ViewModels.Views.Games
@inject IGameDataService GameDataService
@inject ICompetitionService CompetitionService
@inject IStandingsService StandingsService
@inject IScheduleGameService GameService

<h1>Daily View</h1>
<b>Current Year </b>@summary.CurrentYear
<br />
<b>Current Day</b>@summary.CurrentDay
<br />

<RadzenTabs>
    <Tabs>
        @foreach (var day in days)
        {
            
            <RadzenTabsItem Text=@GetDayString(day.Day, summary.CurrentDay) Selected="@GetSelected(day.Day, summary.CurrentDay)">
                <ScheduleDaySummary Day="@day" />
            </RadzenTabsItem>
        }
    </Tabs>
</RadzenTabs>

<Standings model="standings" />
<RadzenButton Click="@((args) => Click(args, "PlayDay"))" Text="Play Day">Play Day</RadzenButton>
<br />
@code {
    GameSummary summary;
    StandingsViewModel standings;
    ScheduleDaySummaryViewModel[] days;
    string dayString = "";

    protected override async Task OnInitializedAsync()
    {
        RefreshData();

    }

    private async void RefreshData()
    {
        summary = await GameDataService.GetGameSummary();
        days = await GameService.GetScheduleDays(summary.CurrentDay - 2, 4, summary.CurrentYear);
        standings = await StandingsService.GetStandings(1, summary.CurrentYear, 1);

        StateHasChanged();

    }

    protected bool GetSelected(int day, int currentDay)
    {
        if (day == currentDay)
            return true;
        else
            return false;
    }

    protected string GetDayString(int dayNumber, int currentDay)
    {
        if (dayNumber == currentDay)
        {
            return "Today - Day " + dayNumber;
        }
        return "Day " + dayNumber;
    }
    async void Click(MouseEventArgs args, string buttonName)
    {
        if (buttonName.Equals("PlayDay"))
        {
            GameDataService.PlayAndProcessDay();
            RefreshData();

        }
    }

}
