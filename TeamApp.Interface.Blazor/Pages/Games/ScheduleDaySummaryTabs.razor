@using TeamApp.ViewModels.Views.Games
@using TeamApp.Services
@inject IScheduleGameService GameService

@if (Days != null)
{
    <BSTabGroup>
        <BSTabList IsPills="true" IsList="true">            
            @for (int i = 0; i < Days.Count(); i++)
            {
                <ScheduleDaySummaryTab  Day="Days[i]" CurrentDay="@CurrentDay" />
            }
        </BSTabList>
        <BSTabSelectedContent />
    </BSTabGroup>
}

@code {
    private int daysToShow = 3;

    public ScheduleDaySummaryViewModel[] Days { get; set; }

    [Parameter]
    public int FirstDay { get; set; }
    [Parameter]
    public int CurrentDay { get; set; }
    [Parameter]
    public int Year { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await RefreshData();

    }

    public async Task FirstDayChanged(int newFirstDay)
    {
        FirstDay = newFirstDay;
        
        await RefreshData();
    }
    private async Task RefreshData()
    {
        Days = await GameService.GetScheduleDays(FirstDay, daysToShow, Year);
        StateHasChanged();

    }

}